{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clickHandler","good","find","item","setState","prevState","filter","headerChanger","length","slice","join","clearSelected","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,aAAe,SAACC,GACV,EAAKH,MAAMC,cAAcG,MAAK,SAAAC,GAAI,OAAIA,IAASF,KACjD,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BN,cAAeM,EAAUN,cAAcO,QAAO,SAAAH,GAAI,OAAIA,IAASF,SAGjE,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BN,cAAc,GAAD,mBAAMM,EAAUN,eAAhB,CAA+BE,S,EAKlDM,cAAgB,WACd,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,QAAQ,GACN,KAA8B,IAAzBA,EAAcS,OACjB,MAAO,oBAET,KAA8B,IAAzBT,EAAcS,OACjB,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBAEF,KAA8B,IAAzBA,EAAcS,OACjB,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBAEF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcU,OAAO,GAA5E,mB,EAINE,cAAgB,WACd,EAAKP,SAAS,CACZL,cAAe,M,4CAInB,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,SACGD,KAAKL,kBAGR,sBAAKM,UAAU,mBAAf,UACE,oBAAGA,UAAU,yBAAb,UACG,uBACAjB,EAAgBY,OACjB,uBACC,aACAT,EAAcS,UANnB,SAUGT,EAAcS,OAAS,GAEpB,wBACEM,KAAK,SACLD,UAAU,uBACVE,QAASH,KAAKD,cAHhB,sBAUN,oBAAIE,UAAU,YAAd,SACGjB,EAAgBoB,KAAI,SAACf,GAAD,OACnB,qBAAeY,UAAU,WAAzB,UACE,sBAAMA,UAAU,iBAAhB,SAAkCZ,IADpC,SAGE,wBACEa,KAAK,SACLD,UAAWI,IAAW,SAAU,CAE9B,gBAAiBlB,EAAcG,MAC7B,SAACC,GAAD,OAAUA,IAASF,OAGvBc,QAAS,WACP,EAAKf,aAAaC,IATtB,SAYGF,EAAcG,MAAK,SAACC,GAAD,OAAUA,IAASF,KACnC,SACA,aAjBCA,e,GA1EHiB,IAAMC,WAqGTtB,ICxHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed2cafbc.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [],\n  };\n\n  clickHandler = (good: string) => {\n    if (this.state.selectedGoods.find(item => item === good)) {\n      this.setState(prevState => ({\n        selectedGoods: prevState.selectedGoods.filter(item => item !== good),\n      }));\n    } else {\n      this.setState(prevState => ({\n        selectedGoods: [...prevState.selectedGoods, good],\n      }));\n    }\n  };\n\n  headerChanger = () => {\n    const { selectedGoods } = this.state;\n\n    switch (true) {\n      case selectedGoods.length === 0:\n        return 'No goods selected';\n\n      case selectedGoods.length === 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case selectedGoods.length === 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  clearSelected = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__header\">\n          {this.headerChanger()}\n        </h1>\n\n        <div className=\"App__underheader\">\n          <p className=\"App__underheader--text\">\n            {\"Goods' list length: \"}\n            {goodsFromServer.length}\n            <br />\n            {'Selected: '}\n            {selectedGoods.length}\n          </p>\n          &emsp;\n\n          {selectedGoods.length > 0\n            && (\n              <button\n                type=\"button\"\n                className=\"button button-active\"\n                onClick={this.clearSelected}\n              >\n                Clear\n              </button>\n            )}\n        </div>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map((good) => (\n            <li key={good} className=\"listItem\">\n              <span className=\"listItem__good\">{good}</span>\n              &emsp;\n              <button\n                type=\"button\"\n                className={classNames('button', {\n                  // eslint-disable-next-line max-len\n                  'button-active': selectedGoods.find(\n                    (item) => item === good,\n                  ),\n                })}\n                onClick={() => {\n                  this.clickHandler(good);\n                }}\n              >\n                {selectedGoods.find((item) => item === good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}